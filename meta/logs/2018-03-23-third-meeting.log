Pascal Hertleif @killercup 19:00
Welcome to the third CLI WG meeting, @/all!

Dylan DPC @Dylan-DPC 19:00
:tada: :tada:

Kamal Marhubi @kamalmarhubi 19:00
:wave:

Jon Black @jonblack 19:00
:beer:

Pascal Hertleif @killercup 19:01
what are we doing
first off, let's have a look at what we are discussing in the issue tracker: https://github.com/rust-lang-nursery/cli-wg/issues?q=is%3Aissue+is%3Aopen+label%3A%22tracking+issue%22
the last few weeks we've had a lot of discussions and there are bunch of bikesheds going on :)
this week, i'd like to try and come to some form of consensus on each and assign issues to people who should then summarize the current state and what the WG should do about it
let's start from the bottom up

Dylan DPC @Dylan-DPC 19:03
also we need to discuss some kind of scope, like what we are exactly supposed to do for each issue :)

Pascal Hertleif @killercup 19:03
yep
okay, first off: the "ideal guide" rust-lang-nursery/cli-wg#6

Ed Page @epage 19:04
It seems like #21 also ties a little into that

Pascal Hertleif @killercup 19:04
does anyone want to start working on this right now? there's little discussion and rust-lang-nursery/cli-wg#21 feels like it touches similar topics
(rust-lang-nursery/cli-wg#21 being "Support development of well-behaved CLI apps")

Kamal Marhubi @kamalmarhubi 19:05
these sound a bit too vague as stated. "support" subsumes rust-lang-nursery/cli-wg#6 I think

Jon Black @jonblack 19:06
I'm at a supermarket. when I'm back home in ten i can comment :)

Kamal Marhubi @kamalmarhubi 19:06
but also subsumes almost everything to do with CLIs

Pascal Hertleif @killercup 19:06
@jonblack, ah cool. no worries
i was about to ask you whether you'd want to start a collaborative guide collecting best practices :)
to me, rust-lang-nursery/cli-wg#6 is the deliverable we need to finish and put on the (new) rust website

Dylan DPC @Dylan-DPC 19:08
so what is expected from it?

Pascal Hertleif @killercup 19:08
rust-lang-nursery/cli-wg#21 is more of a "let's collect knowledge" effort
@Dylan-DPC it should be a guide that introduces new users to rust while showing how frictionless writing a cli is and what rust has to offer

Kamal Marhubi @kamalmarhubi 19:09
let's clarify that in the title maybe

Dylan DPC @Dylan-DPC 19:10
adding it to the etherpad

Pascal Hertleif @killercup 19:11
@kamalmarhubi the thing is that we can also use this to drive our efforts. the "ideal" part of the guide is that we not describe how it works right now but how we want it to work

Dylan DPC @Dylan-DPC 19:11
or i'll just add it to the issue :D

Pascal Hertleif @killercup 19:11
i admit it's pretty fuzzy
@Dylan-DPC add it to the issue, we can adjust the title after the meeting

Kamal Marhubi @kamalmarhubi 19:12
@killercup how do you see ownership of stuff in the wg? (sorry for simple procedural questions; I missed the other two meetings)

Dylan DPC @Dylan-DPC 19:12
done
its okay @kamalmarhubi . what do you mean by ownership?

Pascal Hertleif @killercup 19:12
@kamalmarhubi no worries. yes, this is absolutely something this WG needs to deliver :)
we can decide how we end up writing that content, of course
let's talk about this later, this'll take too long for this meeting

Jon Black @jonblack 19:14
I think we have quite a lot of rough knowledge already. It'd be nice to turn those into example and see what we bump into.

Pascal Hertleif @killercup 19:14
i'll assign myself for now and promise to add more content to the issue and also talk to @jonblack about #21 :)

Jon Black @jonblack 19:14
I agree the guide is the main deliverable, but I'm not sure I understand how a collaborative guide would work different to what we've been doing in the issue.

Kamal Marhubi @kamalmarhubi 19:14
how we want it to work
this makes sense. on this note, we should start thinking about proc_macro / macros 2.0 for "ideal" state. (delay talking about this for the moment)

Pascal Hertleif @killercup 19:15
@kamalmarhubi yeah, and cargo project templates
but for now let's skip to rust-lang-nursery/cli-wg#7 -- Config file management

Kamal Marhubi @kamalmarhubi 19:15
what do you mean by ownership?
ie, how do we think about who is responsible for moving an effort forward?

Pascal Hertleif @killercup 19:15
we have way more discussion there, 42 comments right now

Ed Page @epage 19:16
ownership
I assume this also gets back to killercup's previous comment
assign issues to people who should then summarize the current state and what the WG should do about it

Pascal Hertleif @killercup 19:17
@spacekookie you opened this issues after the first meeting and started working with @soc on directories, can you give a summary of the current state of the discussion?

Kamal Marhubi @kamalmarhubi 19:17
ah, yes it does. my bad :-)
soc @soc says hi

Pascal Hertleif @killercup 19:18
@soc :wave:

Katharina @spacekookie 19:19
Well, currently there is the directories-rs crate which is getting some more polish. There are still some open issues about how to handle OS-specific paths (i.e. organisation names on OSX and Windows vs just application name son Linux). And then how to expose those with nice factory functions

Pascal Hertleif @killercup 19:20
cool. this is pretty isolated from handling reading of config files themselves, right? i.e., assuming i know which file to load, is there any ready-made solution to read that file?
(i've been meaning to work on a prototype to see how to get structopt and a configuration-loading crate working together, but i haven't pushed any code yet)

Katharina @spacekookie 19:20
Apart from that, I think most people are in agreement about creating a crate that "just gives out configs", abstracting a lot of the boilerplate away. But it's not clear yet how or how to then allow tweaking the defaults without having to reinvent the wheel
Yea, directories-rs is just about the paths, pretty disconnected with any other workflow. A more comprehensive configuration crate would wrap around that then

Pascal Hertleif @killercup 19:21
great, thanks for the summary! :)
does anyone want to start working on a just-give-me-a-config crate?
i have some ideas to get started but won't have time to work on this for at least the next 2 weeks

Dylan DPC @Dylan-DPC 19:22
can give it a go as long as there is someone else who knows stuff about this :D

Pascal Hertleif @killercup 19:23
awesome, i'll ping you after the meeting, @Dylan-DPC!

Katharina @spacekookie 19:23
@Dylan-DPC I was about to say the same thing x) I'd love to take the lead with it but I'm not sure I know enough about how to make it boilerplate-free without sacrificing flexibility

Kamal Marhubi @kamalmarhubi 19:23
I feel like the main thing to do on that is to figure out the API. there's a lot of weirdness that can happen, eg versioning of the format etc.

Pascal Hertleif @killercup 19:23
will ping you too @spacekookie :)

Katharina @spacekookie 19:23
Maybe we could team up on that then ;)

Dylan DPC @Dylan-DPC 19:23
:)
which issue is that btw?

Pascal Hertleif @killercup 19:24
@Dylan-DPC rust-lang-nursery/cli-wg#7

Dylan DPC @Dylan-DPC 19:24
:+1:

Katharina @spacekookie 19:24
@killercup and his lightning reflexes :P

Pascal Hertleif @killercup 19:25
next up! rust-lang-nursery/cli-wg#8 - Packaging and distributing apps

Ed Page @epage 19:25
btw started to summarize 7

Pascal Hertleif @killercup 19:25
@epage i said i'd assign you last meeting and i finally did ;)
@epage awesome! thanks so much!

Ed Page @epage 19:25
Thanks!

soc @soc 19:25
I think the part about handling OS-specific app names is largely done. the different functions were all reduced down to
ProjectDirs::from(qualifier, organization, application)
that should also be able to deal with schemes for operating systems that don't even exist right now (I hope)

Ed Page @epage 19:25
Already got 8 summarized

Dylan DPC @Dylan-DPC 19:26
@epage i have pasted @spacekookie 's comment here in the issue :)

Ed Page @epage 19:26
Thanks

Pascal Hertleif @killercup 19:26
yeah, rust-lang-nursery/cli-wg#8 has a great summary! to quote it here a bit ;)
Plan of attack
Process documentation
Automation
-- documentation is luckily also already a separate issue which we'll discuss later: rust-lang-nursery/cli-wg#23 --

Ed Page @epage 19:27
Not sure about for other issues, but the assumptions section is really helpful for trying to keep the conversation on track and in scope.
Are you connecting "Process documentation" with 23?

Pascal Hertleif @killercup 19:29
yes? ah, i see, it's "documention for the process" not "process the files to generate suitable documentation"

Ed Page @epage 19:29
Yup

Pascal Hertleif @killercup 19:29
lol, maybe change that wording ;)

Ed Page @epage 19:30
Improved
Already had to fix 23's title when I realized it was ambiguous

Pascal Hertleif @killercup 19:30
:D
let's make the attack plan a bit more concrete

Katharina @spacekookie 19:31
Talking about packaging, I don't know if this completely beyond scope but what I think would be really cool was a CLI tool that you could give some info about your application and which then generated CI files that automatically built binaries and packages for different platforms on tagged travis releases xD

Kamal Marhubi @kamalmarhubi 19:31
yeah! I was thinking something like a thing in the (eventual) cargo project template
but a tool to help you add them to an existing project would be great too

Dylan DPC @Dylan-DPC 19:32
for CIs?

Ed Page @epage 19:32
Yeah, sounds like a mixture of templates and automation (mentioned in the issue)

Pascal Hertleif @killercup 19:32
@spacekookie @kamalmarhubi you mean like "copy all the files of the trust repo"? :D

Ed Page @epage 19:32
We first want to understand and document the process so we have a solid basis for templates and tools
and to help people who can't use them for some reason

Katharina @spacekookie 19:32
@killercup Yes but with more :sparkles: MAGIC :sparkles:

Pascal Hertleif @killercup 19:32
@epage i assume the documentation should live in the crates-ci orga that already has a bunch of stuff? we can at a later point move parts of the to a more official place (say, part of the official website)

Dylan DPC @Dylan-DPC 19:33
i don't know whether you can generalise CI process for all users :D

Ed Page @epage 19:33
Yeah, thats where I was going to start the documentation

Pascal Hertleif @killercup 19:33
@epage sgtm!

Dylan DPC @Dylan-DPC 19:34
we also have the rust-clique organisation

Kamal Marhubi @kamalmarhubi 19:34
@Dylan-DPC fair, but you can probably generalise the build part of CI, assuming everyone's build is cargo build

Dylan DPC @Dylan-DPC 19:34
true.

Pascal Hertleif @killercup 19:34
okay, anyone feel like taking the challenge on writing the ultimate interactive ci setup tool?

Katharina @spacekookie 19:34
This is a really cool project https://github.com/japaric/cross
I actually don't know if that's documented somewhere right now?

Kamal Marhubi @kamalmarhubi 19:35
I could spend some time speccing it, but not able to commit to writing it at the moment

Pascal Hertleif @killercup 19:35
and do we want to contribute to cargo-{deb,wix,arch} in the meantime, and others, and maybe unify them?

Dylan DPC @Dylan-DPC 19:35
@spacekookie cross is searching for co-maintainers :P

Katharina @spacekookie 19:35
@Dylan-DPC Yea the project could use some love

Pascal Hertleif @killercup 19:36
@kamalmarhubi speccing sounds like you want to contribute to https://github.com/crate-ci/crate-ci.github.io

Katharina @spacekookie 19:36
I actually had some issues with dependencies and having to write my own Dockerfile's. Wondering if it would be possible to generate them somehow

Pascal Hertleif @killercup 19:36
@Dylan-DPC there are plans to integrate xargo into cargo, though, that'll make some new stuff possible

Ed Page @epage 19:37
I was starting on a "stager" crate (after I do my assert_cli work) to make it easier to organize the files for packaging. Once I got that in, I was going to reach out to the cargo-deb, etc crates to see if they want to help "unify" using stager

Dylan DPC @Dylan-DPC 19:37
@spacekookie even i wanted to generate them for some reason :joy:

Ed Page @epage 19:37
For now, stager was just going to make it easier to create tarballs for github

Kamal Marhubi @kamalmarhubi 19:37
@killercup
speccing sounds like you want to contribute to https://github.com/crate-ci/crate-ci.github.io
seems unrelated?

Katharina @spacekookie 19:37
@killercup Having a single packaging crate with modules could be cool. The same way that "clippy" is all the lints :P

Ed Page @epage 19:38
@kamalmarhubi
crate-ci's focus is on documenting and streamlining crate management, including packaging
So if you want to spec packaging stuff, that could be a good place

Pascal Hertleif @killercup 19:38
@epage is stager meant to use custom adaptors it can call out to?

Kamal Marhubi @kamalmarhubi 19:38
with dependencies and having to write my own Dockerfile's
this is a big problem. is there an issue for non-crates.io dependencies?

Ed Page @epage 19:38
Stager only lays out files on disk. The tools will then suck up those files. It will have plugins for custom sources, like cargo (to get the bin)

Katharina @spacekookie 19:39
@kamalmarhubi My problem was with ncurses and ncursesw

Pascal Hertleif @killercup 19:39
@epage sounds great (just what i'd do :D)

Ed Page @epage 19:39
I'm basing stager off of real world installer tools I've seen internal to businesses
My main motivation for stager is I was trying to document tarballing and its really annoying adding it to a CI process because of how much extra book keeping is needed to find the bin

Kamal Marhubi @kamalmarhubi 19:40
@spacekookie yeah that's a problem. if there's not an issue for it, we should file one!

Katharina @spacekookie 19:40
@kamalmarhubi You mean in cross or the CLI-WG?

Ed Page @epage 19:41
I've explicitly called out stager on 8

Katharina @spacekookie 19:41
I mean, the cross README basically says to build your own Docker container but the workflow is a bit cumbersome

Pascal Hertleif @killercup 19:41
@epage i think focussing on having a unified interface that can give you nicely packaged stuff is a huge thing. could pay off greatly or also not work well enough for people to use

Kamal Marhubi @kamalmarhubi 19:41
CLI-WG. CLI tools will often have non-rust dependencies. we should at least have guidance for it. ideally we Solve the Problem but that's a larger, ecosystem wide thing.

Pascal Hertleif @killercup 19:42
@epage do you think you can get a MVP ready in the next ~2 weeks and then we can ask contributors/authors of cargo-{deb,…}/users what they think?

Ed Page @epage 19:42
@killercup
or also not work well enough for people to use
The importance of the documentation and having composable tools like stager :)
I was trying to get my MVP of assert_cli implemented first. Would you prefer me to priorize stager instead?

Kamal Marhubi @kamalmarhubi 19:43
is this a new assert_cli?

Ed Page @epage 19:43
@kamalmarhubi see rust-lang-nursery/cli-wg#9

Pascal Hertleif @killercup 19:43
@epage maybe. great transition, though!

Dylan DPC @Dylan-DPC 19:43
i think let's get back to the issues :P

Pascal Hertleif @killercup 19:43
next up: testing cli apps -- rust-lang-nursery/cli-wg#9
let's rush the next ones a bit, we're already at 75% of the time slot

Ed Page @epage 19:44
Issue is summarized. I've got a small fraction of a prototype implemented for where we plan to take all of these

Pascal Hertleif @killercup 19:45
i think rust-lang-nursery/cli-wg#9 is pretty unchanged, and has a great summary. @epage and i are working on the next assert_cli
(i'll join back in next week! yay!)

Dylan DPC @Dylan-DPC 19:45
great :)

Pascal Hertleif @killercup 19:45
aaaaand next: rust-lang-nursery/cli-wg#10 Cross-platform file system abstractions

Ed Page @epage 19:45
My preference then is to focus on assert_cli rather than stager so I can have some decent ground work layed for when you come back

Pascal Hertleif @killercup 19:46
@epage yeah, maybe work on assert_cli next week and then we'll talk the next weekend?

Ed Page @epage 19:46
Sure

Pascal Hertleif @killercup 19:47
so rust-lang-nursery/cli-wg#10 is kinda related. @epage i think you also proposed this in the first meeting

Ed Page @epage 19:47
Don't remember why

Pascal Hertleif @killercup 19:48
@vitiral started https://github.com/vitiral/path_abs
which seems to address some of the "higher level path" points
anyone want to work on this?

Ed Page @epage 19:49
I think #10 needs a summary and some more requirement gathering. I've seen two things recently (1) concerns over reading paths from files and (2) someone complaining about relative paths within Path/PathBuf. I wish I had kept track of them and noted them on this issue.
I'll at least do a summary for it and look some more for those posts I saw so we can try to get more input

Pascal Hertleif @killercup 19:50
yeah i'm reading through the comments right now too… let's come back to this at a later date
next: rust-lang-nursery/cli-wg#11 Improve ecosystem discoverability
so far we've started/worked on at least 3 github orgas for cli stuff and i think we have some good unification efforts going
i'd like to have some points of this become part of the "general rust best practices", like cross-linking related crates

Katharina @spacekookie 19:52
I don't know what's planned so far with the new Rust homepage but having a canonical selection of crates "How to write a CLI" could be a nice start?

Ed Page @epage 19:52
That might be good to note on the maintainership guide issue, rust-lang-nursery/ecosystem-wg#10
(cross linking)

Pascal Hertleif @killercup 19:53
@spacekookie maybe. also dangerous, could go stale quickly
@epage ah yes, we can totally work with the new ecosystem wg on this!
next: rust-lang-nursery/cli-wg#12 Error handling in CLI apps

Ed Page @epage 19:54
I know discoverability is a common discussion point point for crates.io. Do we know if finding "if you want to use this crate, people also use creates X with it" has ever come up?
an automated cross-linking

Pascal Hertleif @killercup 19:54
@epage not sure, i'll ask around
so for #12 we have quite good news: rust-lang/rust#43301
? in main is pretty close to stable

Dylan DPC @Dylan-DPC 19:55
@epage we could have a "suggest" section in Cargo.toml where in you can suggest other crates to the user. I have seen it in other package managers.

Pascal Hertleif @killercup 19:55
as in, it'll totally be in rust 2018

Kamal Marhubi @kamalmarhubi 19:55
:sparkles:

Ed Page @epage 19:55
Yay!
@Dylan-DPC I'm hoping for a more automated approach looking at a crate's direct dependencies

Dylan DPC @Dylan-DPC 19:56
ok

Pascal Hertleif @killercup 19:56
the more complicated issue is outputting good errors and exiting with good error codes…

Kamal Marhubi @kamalmarhubi 19:56
we could have a "suggest" section in Cargo.toml
and then implement pagerank :-)

Pascal Hertleif @killercup 19:57
rust loves bots, why not add one that uses a bit machine learning to help you find just the crates you need? :D

Ed Page @epage 19:57
Hasn't @BurntSushi brought up issues with broken pipes or something? Not seeing it brought up in 12

Katharina @spacekookie 19:58
crates.io just needs a good recommender algorithm.
"People who used this crate also liked this other crate" :joy:

Kamal Marhubi @kamalmarhubi 19:58
it was in a different issue

Pascal Hertleif @killercup 19:58
it was in #21 i think

Kamal Marhubi @kamalmarhubi 19:58
on handling stdio and such

Pascal Hertleif @killercup 19:59
damn, we're almost at the end of the time box already
we have too many things!

Dylan DPC @Dylan-DPC 19:59
maybe extend it? :P

Pascal Hertleif @killercup 19:59
let me just add two things and then we can officially end the meeting but you are welcome to keep discussing stuff :)

Ed Page @epage 19:59
I think the important thing is find owners for each so we don't have to discuss it all right now

Kamal Marhubi @kamalmarhubi 20:00
:+1:

Pascal Hertleif @killercup 20:00
995 survey responses!!

Katharina @spacekookie 20:00
When are the results gonna be published?

Pascal Hertleif @killercup 20:00
they survey ends tomorrow

Kamal Marhubi @kamalmarhubi 20:00
link? I want to share it with my internets

Pascal Hertleif @killercup 20:01
i'll present preliminary results at the all hands monday morning
@kamalmarhubi https://goo.gl/forms/WQhNGOG723JobeEf2
which also brings me to:
who'll be at the rust all hands? :D

Ed Page @epage 20:01
I wish :)

Katharina @spacekookie 20:03
@killercup I will be but you know that ;)

Pascal Hertleif @killercup 20:03
there are two time slots for the cli wg, and i want to use them to discuss (a) what we need from the other teams and (b) how to get all that marketing goodness going

Kamal Marhubi @kamalmarhubi 20:04
what is rust all hands?
(I'm so out of the loop!)

Pascal Hertleif @killercup 20:04
@kamalmarhubi meeting of rust team members, next week at the mozilla office in berlin

Kamal Marhubi @kamalmarhubi 20:05
oh man. yeah I won't be there. it'd be great though...

Pascal Hertleif @killercup 20:05
i'll post here when i know the final schedule, and you're all very welcome to at least virtually join

Dylan DPC @Dylan-DPC 20:05
sounds cool :)

Pascal Hertleif @killercup 20:06
okay, well, i guess this marks the end of the official meeting :)
